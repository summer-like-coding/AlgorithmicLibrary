{
    // ts编译器的配置文件
    // includes，用来指定哪些文件需要tsc进行编译
    // "include": [
    //     //  "./src/**/*"，意思是，src文件夹下的任意目录的任意文件
    //     // 一个*表示任意文件，两个*表示任意目录
    //     "./src/**/*"
    // ],
    //exclude表示这里面的文件是不需要编译的 
    // exclude含有默认值：['node_modules','bower_components','jspm_packages']
    // "exclude": [
        
    // ],
    // 一些配置选项
    "compilerOptions": {
        // 用来指定会被编译为什么版本的语言
        "target": "ES6",
        // 模块化，使用的是那个模块化
        // "module": "ES6",
        // 用来指定库，一般我们不去设置
        // "lib": []
        // outDir,指定文件所在的目录，一般我们放在根目录下的dist文件里
        "outDir": "./dist",
        // outFile，将编译好的js代码放在一个js文件里面
        // 这个不可以和module一起使用，除非你的modile应该是amd和system
        // 注意好变量名字不要相同
        "outFile": "./dist/index.js",
        // 是否对我们的js文件进行编译，默认为false
        "allowJs": false,
        // 是否检查js，以ts的标准去检查js
        "checkJs": false,
        // 是否删除注释，true：就是删除注释
        "removeComments": false,
        // 他就是严格检查的总开关，假如true，那么才会进行下面的检查，如果是false，那么直接就是不进行任何的严格检查
        "strict": false,
        // 不生产编译后的文件（js）文件
        "noEmit": false,
        // 当有错误不生成编译后的文件
        // 只要是发生了错误，那么就不会生成js文件
        "noEmitOnError": true,
        // 是否开启严格模式，默认是不开启严格模式的
        "alwaysStrict":true,
        // 当我们没有指定变量的类型时，我们是否使用any类型
        // 就是不允许隐式的any，类如函数传参没有写类型
        "noImplicitAny": true,
        // 不允许有指定不明确的this
        "noImplicitThis": true,
        // 严格的检查空值，对于一些值，他们可能为空
        "strictNullChecks": false
    }
}